networks:
  kong-net:
    name: compose_kong-net
    external: true
      

services:
  auth-service:
    build: ./auth-service
    ports:
      - "1323:1323"
    networks:
      - kong-net

  lgtm:
    image: grafana/otel-lgtm
    ports:
      - "4317:4317"
      - "4318:4318"
      - "3000:3000"
    networks:
      - kong-net

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - "4317:4317"
      - "4318:4318"
      - "16686:16686"
    networks:
      - kong-net
  
  python-service:
    build: ./python-service
    ports:
      - "9001:8000"
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=service.name=python-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://lgtm:4318/v1/traces
    networks:
      - kong-net

  nodejs-service:
    build: ./nodejs-service
    ports:
      - "9002:3000"
    environment:
      - DB_HOST=db
      - OTEL_SERVICE_NAME=nodejs-service
      - OTEL_COLLECTOR_SERVER=http://lgtm:4318/v1/traces
      - OTEL_RESOURCE_ATTRIBUTES=service.name=nodejs-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://lgtm:4318/v1/traces
    networks:
      - kong-net
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16.2
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: demo
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgres/tables.sql:/docker-entrypoint-initdb.d/1.sql
      - ./postgres/data.sql:/docker-entrypoint-initdb.d/2.sql